---
# Source: kube-lego/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kube-lego
    chart: kube-lego-0.4.2
    heritage: Tiller
    release: certs
  name: certs-kube-lego
---
# Source: kube-lego/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: kube-lego
    chart: kube-lego-0.4.2
    heritage: Tiller
    release: certs
  name: certs-kube-lego
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - delete
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - update
  - create
  - list
  - patch
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - secrets
  verbs:
  - get
  - create
  - update
---
# Source: kube-lego/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kube-lego
    chart: kube-lego-0.4.2
    heritage: Tiller
    release: certs
  name: certs-kube-lego
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: certs-kube-lego
subjects:
  - kind: ServiceAccount
    name: certs-kube-lego
    namespace: ingress
---
# Source: kube-lego/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kube-lego
    chart: kube-lego-0.4.2
    heritage: Tiller
    release: certs
  name: certs-kube-lego
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-lego
        release: certs
    spec:
      serviceAccountName: certs-kube-lego
      containers:
        - name: kube-lego
          image: "jetstack/kube-lego:0.1.6"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: LEGO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LEGO_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: "LEGO_EMAIL"
              value: "yuan-lego@fraction.jp"
            - name: "LEGO_PORT"
              value: "8080"
            - name: "LEGO_URL"
              value: "https://acme-v01.api.letsencrypt.org/directory"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 40m
              memory: 128Mi
            requests:
              cpu: 40m
              memory: 64Mi
            

